---
layout: post
title: "MySugr"
date: 2013-04-25   13:00
published: false
comments: true
author: "Floor Drees (@floordrees)"
categories:
        - 
---

## MySugr switched from Ruby to Java. Here's why:

Vienna's most beloved startup must be mySugr, creating an app to help people fight the 'diabetes monster'. mySugr was founded by Frank Westermann, Fredrik Debong, Gerald Stangl and Michael Forisch in 2011 and launched in April 2012. Today they are a team of 20 and they've welcomed over 10.000 people from Austria, Germany and Italy, using their application.  
 
I talked with [Bernhard Schandl][2], Technical Director and [Gerald Stangl][3], Creative Director, about mySugr's switch from Ruby on Rails to Java. 

#####Here's to the big question: why did you switch from Ruby to Java?
Gerald: We started with Ruby on Rails, as the team I did consulting work with consisted of Ruby guys. We however hired a new technical lead who was very proficient using JVM based systems and had loads of people in his network who had a track record using Java. All the local Ruby developers I knew were talented but didn't have that much professional experience. It was too risky to build an application in RoR, if those guys would have left the company for whatever reason, we would have had a technology nobody else could really work with. It was really hard for me to let Rails go, though.

Bernhard: When I came in 3/4 months ago, the whole Java setup was already in place. mySugr already had loads of users and it was out of the question to change the code base again. I'm experienced with Java, I never build full webbased projects in Ruby, or wrote production code in Ruby for that matter. Ruby is great for a lot of things, I mean, you sit down and after an hour you have a running webapp. For quick iterations Ruby is also great. Software gets more complex overtime with every project, no matter which programming language you use, we just opted for the more mature language. 

Gerald: We're dealing with highly sensitive data, mySugr is a medical device. The Java libraries we use are reliable, bullet-proof technologies, used and developed by a lot of companies before us. 

Bernhard: We have regulatory restrictions enforcing us to really investigate a third party library before using it. 

Gerald: We operate in a regulated environment and we're a young company, we didn't want to make mistakes, so we chose the most secure way. It was not so much a technical decision, we just want to protect our users. Plus: we had to consider that with mySugr we're dealing with iOS, Android and the backend. Drilling down our languages to Java and Objective-C made sense as we wanted to keep the team small. There simply aren't many Ruby guys in Vienna that are proficient in Objective-C as well...

#####How many developers are working on mySugr?
Bernhard: The dev team is 5 people, some work part-time, and they are for the bigger part based in Vienna. Our remote workers check in every several weeks, stay for a few days and we always try to get a beer then. We have a daily standup that takes about 15 minutes and a weekly Show & Tell, limited to 1 hour. We use a JIRA ticketingsystem and Basecamp, although that's more for the conceptual part of the design & development process. And we use Campfire to quickly post updates. I'm always here (at Sektor5) to try to answer all the questions concerning database excerpts and such, so the developers are not disturbed.

#####What's new in mySugr's next release?
Gerald: The new mySugr is brighter, we have a new monster and some new challenges. It offers multi device syncing and your location is now - more than ever - important. The user experience evolves around pictures (images of food and drinks you take) and push notifications remind you to finish your challenges or document your lunch. 

Bernhard: Our [junior app was just released][4] last week, also on Android. You should check that out too!

[1]: https://mysugr.com
[2]: https://twitter.com/besbes
[3]: https://twitter.com/geraldstangl
[4]: http://www.inventures.eu/mysugr-junior-answering-to-an-alarming-trend
